version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: mallanalysis
      POSTGRES_PASSWORD: mallanalysis123
      POSTGRES_DB: mall_analysis
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mallanalysis"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Queue
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://mallanalysis:mallanalysis123@postgres:5432/mall_analysis
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin123
      S3_BUCKET: mall-analysis-reports
      PORT: 3000
      # Add your API keys here or use .env file
      # FIRECRAWL_API_KEY: ${FIRECRAWL_API_KEY}
      # LLM_API_KEY: ${LLM_API_KEY}
    volumes:
      - ./src:/app/src
      - ./client/src:/app/client/src
      - ./config:/app/config
      - ./public:/app/public
      - ./screenshots:/app/screenshots
    ports:
      - "3000:3000"
      - "5173:5173"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: >
      sh -c "
        npm run dev &
        cd client && npm run dev
      "

  # Worker (separate container for production)
  worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://mallanalysis:mallanalysis123@postgres:5432/mall_analysis
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin123
      S3_BUCKET: mall-analysis-reports
      WORKER_CONCURRENCY: 2
      # Add your API keys here or use .env file
      # FIRECRAWL_API_KEY: ${FIRECRAWL_API_KEY}
      # LLM_API_KEY: ${LLM_API_KEY}
    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./screenshots:/app/screenshots
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: ["npm", "run", "worker"]

volumes:
  postgres_data:
  redis_data:
  minio_data: